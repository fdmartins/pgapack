.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "PGAGetDataType" "3" "2023-01-09" "" "PGAPack"
.SH NAME
PGAGetDataType \- Return the data type used by the given context. 
.SH SYNOPSIS
.B int  PGAGetDataType(\fI\%PGAContext\fP  *ctx) 
.sp
.SH EXAMPLE
.sp
.nf
.ft C
PGAContext *ctx;
int datatype;

\&...
datatype = PGAGetDataType (ctx);
switch (datatype) {
case PGA_DATATYPE_BINARY:
    printf ("Data Type = PGA_DATATYPE_BINARY\en");
    break;
case PGA_DATATYPE_CHARACTER:
    printf ("Data Type = PGA_DATATYPE_CHARACTER\en");
    break;
case PGA_DATATYPE_INTEGER:
    printf ("Data Type = PGA_DATATYPE_INTEGER\en");
    break;
case PGA_DATATYPE_REAL:
    printf ("Data Type = PGA_DATATYPE_REAL\en");
    break;
case PGA_DATATYPE_USER:
    printf ("Data Type = PGA_DATATYPE_USER\en");
    break;
}
.ft P
.fi

 
.SH PARAMETERS
.IP \(bu 2
\fBctx\fP \-\- context variable 
.SH RETURNS
The integer corresponding to the symbolic constant used to specify the data type
.SH LOCATION
\fI\%File pga.c\fP
.SH COPYRIGHT
1996-2022, David M. Levine, Philip L. Hallstrom, David M. Noelle, Brian P. Walenz, Dirk Eddelbuettel, Ralf Schlatterbeck
.\" Generated by docutils manpage writer.
.
