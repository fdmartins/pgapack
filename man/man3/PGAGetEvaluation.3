.\" Man page generated from reStructuredText.
.
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.TH "_PGAGetEvaluation" "3" "2023-01-09" "" "PGAPack"
.SH NAME
_PGAGetEvaluation \- Return the evaluation function value for string p in population pop and optionally a pointer to the auxiliary evaluations. 
.SH SYNOPSIS
.B double  _PGAGetEvaluation(\fI\%PGAContext\fP  *ctx, int  p, int  pop, const  double  **aux) 
.sp
.SH DESCRIPTION
.sp
This uses a trick for implementing optional arguments in C. The real
function to use is without leading underscore. There is a
macro that makes the last argument optional.
.SH EXAMPLE
.sp
.nf
.ft C
PGAContext *ctx;
int p;
double eval;

\&...
eval = PGAGetEvaluation (ctx, p, PGA_NEWPOP);
.ft P
.fi
.sp
or
.sp
.nf
.ft C
const double *p;
\&...
eval = PGAGetEvaluation (ctx, p, PGA_NEWPOP, &p);
.ft P
.fi

 
.SH PARAMETERS
.IP \(bu 2
\fBctx\fP \-\- context variable 
.IP \(bu 2
\fBp\fP \-\- string index 
.IP \(bu 2
\fBpop\fP \-\- symbolic constant of the population the string is in 
.IP \(bu 2
\fBaux\fP \-\- Pointer to Auxiliary evaluations 
.SH RETURNS
The evaluation function value for string p in population pop
.SH LOCATION
\fI\%File evaluate.c\fP
.SH COPYRIGHT
1996-2022, David M. Levine, Philip L. Hallstrom, David M. Noelle, Brian P. Walenz, Dirk Eddelbuettel, Ralf Schlatterbeck
.\" Generated by docutils manpage writer.
.
