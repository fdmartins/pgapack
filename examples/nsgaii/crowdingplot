#!/usr/bin/python3

import sys
import matplotlib.pyplot as plt
from argparse import ArgumentParser

f  = sys.stdin

cmd = ArgumentParser ()
cmd.add_argument \
    ( "filename"
    , help    = "Filename to read optimization data from, default stdin"
    , nargs   = '?'
    )
cmd.add_argument \
    ( "-n", "--title"
    , help    = "Default title of the plot, will be overwritten by "
                "'Example' or 'Title' line"
    , default = ''
    )
cmd.add_argument \
    ( "-x", "--x-axis"
    , type    = int
    , default = 0
    )
cmd.add_argument \
    ( "-X", "--x-label"
    , help    = "Label for X-Axis"
    )
cmd.add_argument \
    ( "-y", "--y-axis"
    , type    = int
    , default = 1
    )
cmd.add_argument \
    ( "-Y", "--y-label"
    , help    = "Label for Y-Axis"
    )
args = cmd.parse_args ()
if args.filename :
    f = open (args.filename, 'r')

X = []
Y = []

title = args.title
for line in f :
    line = line.strip ()
    if line.startswith ('Example:') or line.startswith ('Title:') :
        title = line.split (None, 1) [-1]
    if line.startswith ('F') :
        f, idx, number = line.split ()
        idx = int (idx)
        num = float (number)
        if idx == args.y_axis :
            Y.append (num)
        elif idx == args.x_axis :
            X.append (num)
if args.title :
    title = args.title

plt.scatter (X, Y)
x_label = args.x_label or 'Objective %d' % args.x_axis
y_label = args.y_label or 'Objective %d' % args.y_axis
plt.xlabel (x_label)
plt.ylabel (y_label)
plt.title (title)
plt.show ()
